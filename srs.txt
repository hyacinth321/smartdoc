@Requirement [id=rq1] [description = Return a list where each element is a word from fname.]
 Rationale  [id=ra1] [description = For the function file21st(fname), we firstly open a file named fname, after split the content, then append each word into list. ]
 TestCase   [id=tc1] [description= If in the fname,is an sentence¡® How are you.¡¯, then a list of [How,are,you] will be returned]
 Priority   [High]

@Requirement [id=rq2] [description = Return a dictionary given list lst.  Each key is an element in the lst. The value is always 1.]
 Rationale  [id=ra2] [description=For the function lst2dict(lst), we make a dictionary for list lst, the d[w] means the value of each lst[i] in the dictionary, to make it value 1]
 TestCase   [id=tc2] [description= When the list is [how,are,you], then we  get {'how':1, 'are':1, 'you':1}]
 Priority   [Medium]

@Requirement [id=rq3] [description = Return a dictionary where each key is a word both in the file fname and in the dictionary english_dictionary, and the corresponding value is the frequency of that word.]
 Rationale  [id=ra3] [description= Convert all uppercase characters in a string to lowercase, then compare the word in the list with the english_dictionary,if exists,then compare to the known dictionary d. If there are one in it, then the value of lst[i] will be added 1, or the value will be 1. On the other hand, the value of each can show the word_frequency.]
 TestCase   [id=tc3] [description = For a list [How, are, you,are,you fine], firstly changed to a lowercase list, that is [how, are ,you], and if for these three word, only "you" not in the dictionary d, then we can get the dictionary{'how':2, 'are':3, 'you':1, 'fine':2}]
 Priority   [Medium]

@Requirement [id=rq4] [description = Return a sorted list of tuples, each tuple containing a key and a value. Note that the tuples are order in descending order of the value.]
 Rationale  [id=ra4_sort] [description=Sort lists according to the specified key.]
 TestCase   [id=tc_test] [description = When the input is {'how':2, 'are':3, 'you':1, 'fine':2}, then the return result will be  (('you', 1),('how',2),('fine',2),('are',3)).]
 Priority   [Low]
